name: vimdoc

on:
  push:
    paths:
      - README.md
    branches:
      - master
      - chore/docgen

jobs:
  vimdocgen:
    runs-on: [ubuntu-latest]
    permissions:
      contents: write
      pull-requests: write
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - uses: actions/checkout@v2
      - name: Setup git
        run: |
          git config --local user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          printf 'VIMDOC_BRANCH=bot/vimdoc/%s\n' ${GITHUB_REF#refs/heads/} >> $GITHUB_ENV
      - name: Restore cache for neovim.
        uses: actions/cache@v2
        with:
          path: |
            build/neovim/v0.5.0
          key: ${{ runner.os }}-appimage-0.5
      - name: Setup neovim and install plugins
        run: |
          test -d build/neovim/v0.5.0 || {
            mkdir -p build/neovim/v0.5.0
            curl -Lo build/neovim/v0.5.0/nvim https://github.com/neovim/neovim/releases/download/v0.5.0/nvim.appimage
            chmod +x build/neovim/v0.5.0/nvim
          }
          mkdir -p ~/.local/share/nvim/site/pack/vendor/start
          git clone --depth 1 https://github.com/mjlbach/babelfish.nvim ~/.local/share/nvim/site/pack/vendor/start/babelfish.nvim
          git clone --depth 1 https://github.com/nvim-treesitter/nvim-treesitter ~/.local/share/nvim/site/pack/vendor/start/nvim-treesitter
          ln -s $(pwd) ~/.local/share/nvim/site/pack/vendor/start
      - name: Build parser
        run: |
          export PACKPATH=$HOME/.local/share/nvim/site
          build/neovim/v0.5.0/nvim -u ~/.local/share/nvim/site/pack/vendor/start/babelfish.nvim/scripts/init.lua --headless -c 'TSInstallSync markdown' -c 'qa'
      - name: Generating docs
        run: |
          git checkout -b ${VIMDOC_BRANCH}
          export PATH="${PWD}/build/:${PATH}"
          export PACKPATH=$HOME/.local/share/nvim/site
          build/neovim/v0.5.0/nvim -u ~/.local/share/nvim/site/pack/vendor/start/babelfish.nvim/scripts/init.lua --headless -c 'luafile ./scripts/gen_vimdoc.lua' -c 'qa'
      - name: Create PR
        run: |
          if ! [[ -z $(git status -s) ]]; then
            git add doc/lualine.txt
            git commit -m "chore: genarated vimdoc"
            git push --force https://${GITHUB_ACTOR}:${GITHUB_TOKEN}@github.com/${GITHUB_REPOSITORY} ${VIMDOC_BRANCH}
            gh pr create --fill --base ${GITHUB_REF#refs/heads/} --head ${VIMDOC_BRANCH} || true
          fi
